<!DOCTYPE html>
<html lang="en">
<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chatbot Toggle</title>
    <style>
<!--        * {-->
<!--          margin: 0;-->
<!--          padding: 0;-->
<!--          box-sizing: border-box;-->
<!--        }-->

<!--        body {-->
<!--          font-family: Arial, sans-serif;-->
<!--          background: #f5f5f5;-->
<!--          height: 100vh;-->
<!--          display: flex;-->
<!--          align-items: center;-->
<!--          justify-content: center;-->
<!--        }-->

        /* Chatbot Toggle Button */
        .toggle-chatbot {
          position: fixed;
          bottom: 20px;
          right: 20px;
          background: rgba(5, 29, 175, 0.9);
          color: white;
          border: none;
          padding: 15px 20px;
          font-size: 16px;
          border-radius: 30px;
          cursor: pointer;
          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
          transition: background 0.3s ease;

        }

        .toggle-chatbot:hover {
          background: #3a4167;
        }

        /* Chatbot Container */
        .chatbot-container {
          width: 400px;
          height: 600px;
          background: white;
          border-radius: 10px;
          box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
          display: flex;
          flex-direction: column;
          overflow: hidden;
          position: fixed;
          bottom: 100px;
          right: 20px;
          display: none; /* Initially hidden */

        }

        .chat-header {
          background: linear-gradient(90deg, #061ca1, #061ca1);
          color: white;
          padding: 15px;
          text-align: center;
          font-size: 18px;
          font-weight: bold;
        }

        .chat-body {
          flex: 1;
          padding: 10px;
          overflow-y: auto;
          display: flex;
          flex-direction: column;
          gap: 10px;
          background: #f9f9f9;
        }

        .message {
          max-width: 70%;
          padding: 10px;
          border-radius: 10px;
          font-size: 14px;
          line-height: 1.4;
        }

        .message.bot {
          background: #e5e5e5;
          align-self: flex-start;
        }

        .message.user {
          background: #7b358c;
          color: white;
          align-self: flex-end;
        }

        .chat-footer {
          padding: 10px;
          display: flex;
          align-items: center;
          gap: 10px;
          background: #f1f1f1;
          border-top: 1px solid #ddd;
        }

        .chat-input {
          flex: 1;
          padding: 10px;
          font-size: 14px;
          border: 1px solid #ccc;
          border-radius: 5px;
          outline: none;
          transition: border-color 0.3s;
        }

        .chat-input:focus {
          border-color: #7b358c;
        }

        .send-button {
          background: rgba(0, 123, 255, 0.96);
          color: white;
          border: none;
          padding: 10px 15px;
          font-size: 14px;
          border-radius: 5px;
          cursor: pointer;
          transition: background 0.3s ease;
        }

        .send-button:hover {
          background: #0123d3;
        }
        .toggle-chatbot img {
            width: 25px; /* 버튼 크기에 맞게 조정 */
            height: auto;
        }
    </style>
</head>
<body>
<!-- Toggle Button -->
<button class="toggle-chatbot">
    <img src="/img/ai_button.svg" alt="AI Button" />
</button>


<!-- Chatbot Container -->
<div class="chatbot-container" id="chatbot">
    <!-- Chat Header -->
    <div class="chat-header">
        Chatbot
    </div>

    <!-- Chat Body -->
    <div class="chat-body">
        <!-- Bot Message -->
        <div class="message bot">안녕하세요, {{managerName}}님. 오늘은 무엇을 도와 드릴까요?</div>
    </div>

    <!-- Chat Footer -->
    <div class="chat-footer">
        <input type="text" class="chat-input" placeholder="궁금한 사항을 입력해 주세요" />
        <button class="send-button"><img src="/img/send.svg" alt="Send" style="width: 21px; height: 21px;"  /></button>

    </div>
</div>

<script>
    // JavaScript to toggle the chatbot visibility
    const chatbot = document.getElementById('chatbot');
    const toggleButton = document.querySelector('.toggle-chatbot');

    toggleButton.addEventListener('click', () => {
      if (chatbot.style.display === 'none' || chatbot.style.display === '') {
        chatbot.style.display = 'flex'; // Show the chatbot
      } else {
        chatbot.style.display = 'none'; // Hide the chatbot
      }
    });

    const chatbotSendButton = document.querySelector('.send-button');

    chatbotSendButton.addEventListener('click', () => {

        // Get the value from the input field
        var value = $('.chat-input').val();

        // Check if the value is not empty
            if (value.trim() !== "") {
                // Append the user message to the chat body
                $('.chat-body').append(`
                    <div class='message user'>${value}</div>
                `);

                // Clear the input field after sending the message
                $('.chat-input').val("");

                // Auto-scroll to the latest message
                $('.chat-body').scrollTop($('.chat-body')[0].scrollHeight);
            }

        // fetch 로 넘기면 됨.
        fetch('/api/chatbot', {
            method: 'POST',
            headers: {
                'Content-Type':'application/json'
            },
            body: JSON.stringify({
              text: value
            })
        })
        .then(response => response.json()) // JSON 응답 처리
        .then(data => {
            console.log(data);
            $('.chat-body').append(`
                    <div class='message bot'>${data.response}</div>
            `);

            // Auto-scroll to the latest message
            $('.chat-body').scrollTop($('.chat-body')[0].scrollHeight);
        })
        .catch(error => {
            console.error('Error', error);
        })
    })


// Token Init

    window.onload = async function () {
    // 헤더에서 가져오기.
    //  const accessToken = localStorage.getItem('accessToken');
    function getCookie(cookieName) {
        const cookies = document.cookie.split(';');

        for (let i = 0 ; i < cookies.length; i++) {
            let cookie = cookies[i].trim();

            console.log(cookie);

            // 쿠키명이 주어진 쿠키명과 일치하는지 확인합니다.
            if(cookie.startsWith(cookieName +'=')) {
                return cookie.substring(cookieName.length + 1);
            }
        }

        return null;
    }

        const accessToken = getCookie('accessToken');

        console.log(accessToken);
        if (!accessToken) {
            // window.location.href = '/public/login';
            // return ;
        }

        if (isTokenExpiringSoon(accessToken)) {
            try {
                await refreshToken();
            } catch (error) {
                console.error('Failed to refresh token', error);
                window.location.href = '/login'; //갱신 실패 시 로그인 페이지로 이동
            }
        }// if
    }; // function

    // Access Token 만료 여부 확인
    function isTokenExpiringSoon(token) {
        const decodedToken = JSON.parse(atob(token.split(".")[1])); // Base64 디코딩
        const currentTime = Math.floor(Date.now() / 1000) ; // 현재 시간 (초 단위)
        return decodedToken.exp - currentTime < 60 ; // 만료 60초 전
    }

    // Refresh Token 요청
    async function refreshToken() {
        const response = await fetch('api/v1/auth/refresh', {
            method: 'POST',
            credentials: 'include', // Refresh Token 쿠키 자동 전송
        });

        if (!response.ok) {
            throw new Error("Failed to refresh token");
        }

        const data = await response.json();

    }
</script>
</body>
</html>
